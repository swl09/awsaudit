#!/usr/bin/perl
#
#use JSON;
#
@accounts = ();

$pwd = `/bin/pwd`;
chomp($pwd);
#
# Get the runaudit.sh script from github
# 
unlink "runaudit.sh";
system "wget -q https://raw.githubusercontent.com/swl09/awsaudit/master/runaudit.sh";
system "chmod 755 ./runaudit.sh";

#
# Get the current Region
# 
open(IN, "curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone|");
$az = <IN>;
close(IN);

# Strip the AZ specifier to make the region.
$az =~ s/[a-z]$//g;
#print "$az is AZ\n";

# Set Default Region as env, since it won't change from account to account
$ENV{'AWS_DEFAULT_REGION'} = $az;

open(ACCTIN, "aws dynamodb scan --table-name AWSAccounts|");
while(<ACCTIN>) {
    if (/"S":\s*"(\d+)"/) {
	my $acct = $1;
        push(@accounts, $acct);
	print "Account: $1\n";
    }
} 
close(ACCTIN);

system "aws sqs send-message --queue-url https://queue.amazonaws.com/964355697993/EA-Audit-Pipeline --message-body \"EA-Audit-Start\"";

foreach $acct (@accounts) {
    print "Running for Acct: $acct\n";
    open(ROLEIN, "aws sts assume-role --role-arn  arn:aws:iam::${acct}:role/ea-audit --role-session-name ea-audit|");
    $envstr = "";
    while(<ROLEIN>) { 
        chomp();
        #print "Role Output: $_\n";
        if (/SessionToken|SecretAccessKey|AccessKeyId/) {
	    s/SessionToken/AWS_SECURITY_TOKEN/;
	    s/SecretAccessKey/AWS_SECRET_ACCESS_KEY/;
	    s/AccessKeyId/AWS_ACCESS_KEY_ID/;
	    my ($k, $v) = split(/:\s*/);
	    $k =~ s/\s*"|"$|",$//g;
	    $v =~ s/\s*"|,\s*$//g;
	    # print "K - $k  V - $v\n";
            # print "Injecting $k\n";
	    # $ENV{$k} = $v;
            $envstr .= "$k=$v ";
        }
    }
    close(ROLEIN);


    print "$envstr ./runaudit.sh\n";
    open(AWSIN, "$envstr ./runaudit.sh|");
    while(<AWSIN>) { print; }
    close(AWSIN);
}

system "aws  sqs send-message --queue-url https://queue.amazonaws.com/964355697993/EA-Audit-Pipeline --message-body \"EA-Audit-Complete\"";
